apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev
---
#https://kubernetes.io/docs/reference/access-authn-authz/rbac/
#https://kubernetes.io/docs/reference/access-authn-authz/authorization/#determine-the-request-verb
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: dev
  name: cm-rol
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["ConfigMap"]
  verbs: ["get", "watch", "list","delete"]
  ---
  #https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings
  apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: cm-rol
  namespace: dev
subjects:
# You can specify more than one "subject"
- kind: User
  name: jane # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: cm-rol # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
   namespace: dev
   name: vars
   labels:
     app: front
data:
  db_host: dev.host
  db_user: dev_user